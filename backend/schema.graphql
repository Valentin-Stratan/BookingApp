
type Mutation {
	adminRegister(first_name: String! last_name: String! email: String! password: String!): String!
	adminPasswordRecover(email: String!): String!
	adminPasswordConfirm(email: String! confirmationCode: String! newPassword: String!): String!

	adminServiceCreate(name: String! description: String! duration: String! spaces: Int! price: Float!): service!
	adminServiceUpdate(serviceId: String! name: String description: String duration: String spaces: Int price: Float): service!
	adminServiceDelete(serviceId: String!): String!

	adminCompanyCreate(name: String! description: String! logo: String! adminId: String!): company!
}

type Query {
	adminList: String!
	adminLogin(email: String! password: String!): String!
	adminServiceViewAll(companyId: String!): [service]!

	adminCompanyView(adminId: ID!): [company]!
}

type admin {
	id: ID!
	first_name: String!
	last_name: String!
	email: String!
	password: String!
}

type service {
	id: ID!
	name: String!
	description: String!
	duration: String!
	spaces: String!
	price: String!
	companyId: ID
}

type company {
	id: ID!
	name: String!
	description: String!
	adminId: ID!
	logo: String!
}

schema {
	query: Query
	mutation: Mutation
}